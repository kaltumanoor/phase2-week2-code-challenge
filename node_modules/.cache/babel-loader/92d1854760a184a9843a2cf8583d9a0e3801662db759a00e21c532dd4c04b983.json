{"ast":null,"code":"var _jsxFileName = \"/home/john/Development/code/phase2/Bot-code-challlenge/src/App.js\",\n  _s = $RefreshSig$();\nimport { React, useState, useEffect } from 'react';\nimport \"./App.css\";\nimport BotCollection from \"./components/BotCollection\";\nimport BotProfile from './components/botprofile';\nimport YourBotArmy from \"./components/YourBotArmy\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport OneBot from './components/OneBot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let [bots, setBots] = useState([]);\n  let [botsChosen, setBotChosen] = useState(0);\n  let [numbersArray, setArray] = useState([]);\n  const [currentPage, setPage] = useState(\"/home\");\n  let [picId, setId] = useState(0);\n  let [isTrue, setTrue] = useState(true);\n  let [newArray, setNewArray] = useState([]);\n  useEffect(() => {\n    fetch(\"https://ketkip.vercel.app/bots\").then(res => res.json()).then(data => {\n      setBots(data);\n      console.log(data);\n    });\n  }, []);\n  function sortByHealth() {\n    let data = bots.sort((a, b) => {\n      let categoryA = a.health;\n      let categoryB = b.health;\n      if (categoryA > categoryB) {\n        return -1;\n      }\n      if (categoryA < categoryB) {\n        return 1;\n      }\n      return 0;\n    });\n    setNewArray(data);\n    setBots(data);\n  }\n  function handleId(value) {\n    setId(value);\n  }\n  console.log(picId);\n  function addBot(id, name, image, phrase, health, armor, damage) {\n    let array = [...numbersArray];\n    array.push(id);\n    setArray(array);\n    if (numbersArray.find(item => item === id)) {\n      console.log(\"match\");\n    } else {\n      let botArmy = document.querySelector(\"#yourBotArmy\");\n      let newBot = document.createElement(\"div\");\n      newBot.id = \"army-container\";\n      newBot.setAttribute(\"value\", id);\n      newBot.innerHTML = `\n     <img src = ${image} id= 'army-pic'></img>\n     <h6 id=\"army-heading\">${name}</h6>\n     <h6 id=\"army-phrase\">${phrase}</h6>\n     <span id=\"army-abilities\" ><h5 id=\"army-ability\">health: ${health}</h5><h5 id=\"army-ability\">Armor: ${armor}</h5><h5 id=\"army-ability\">Damage: ${damage}</h5></span>\n    `;\n      newBot.addEventListener('click', e => {\n        console.log(array);\n        let value = parseInt(newBot.getAttribute('value'));\n        let newValue = numbersArray.filter(item => {\n          return item !== value;\n        });\n        setArray(newValue);\n        newBot.remove();\n      });\n      botArmy.appendChild(newBot);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"H1\",\n        children: \" Bot Army Colle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n        sortByHealth: sortByHealth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(BotCollection, {\n            handleId: handleId,\n            addBot: addBot,\n            bots: bots\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/bot\",\n          children: /*#__PURE__*/_jsxDEV(OneBot, {\n            addBot: addBot,\n            bots: bots,\n            picId: picId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3JW8lLlNq5Fm2kj5/+hB4UQXJB4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","BotProfile","YourBotArmy","BrowserRouter","Router","Route","Switch","OneBot","App","bots","setBots","botsChosen","setBotChosen","numbersArray","setArray","currentPage","setPage","picId","setId","isTrue","setTrue","newArray","setNewArray","fetch","then","res","json","data","console","log","sortByHealth","sort","a","b","categoryA","health","categoryB","handleId","value","addBot","id","name","image","phrase","armor","damage","array","push","find","item","botArmy","document","querySelector","newBot","createElement","setAttribute","innerHTML","addEventListener","e","parseInt","getAttribute","newValue","filter","remove","appendChild"],"sources":["/home/john/Development/code/phase2/Bot-code-challlenge/src/App.js"],"sourcesContent":["import { React,useState,useEffect } from 'react';\nimport \"./App.css\";\nimport BotCollection from \"./components/BotCollection\";\nimport BotProfile from './components/botprofile';\nimport YourBotArmy from \"./components/YourBotArmy\";\nimport { BrowserRouter as Router ,Route,Switch } from \"react-router-dom\"\nimport OneBot from './components/OneBot';\n\n\n\nfunction App() {\n\n  let [bots ,setBots] = useState([])\n  let [botsChosen ,setBotChosen] = useState(0)\n  let[numbersArray,setArray] = useState ([])\n  const [currentPage,setPage] = useState(\"/home\")\n  let [picId,setId]  = useState(0)\n  let [isTrue,setTrue] = useState(true)\n  let [newArray,setNewArray] = useState([])\n\nuseEffect(()=>{\n  fetch(\"https://ketkip.vercel.app/bots\")\n  .then((res)=> res.json())\n  .then((data) =>{\n    setBots(data)\n    console.log(data);\n  })\n},[])\n\nfunction sortByHealth(){\n let data = bots.sort((a,b)=>{\n    let categoryA = a.health\n    let categoryB = b.health\n  \n    if(categoryA > categoryB ) {\n      return -1;\n  }\n  if (categoryA < categoryB ) {\n      return 1;\n  }\n  return 0;\n  })\n    setNewArray(data)\n    setBots(data)\n}\n\nfunction handleId(value) {\n  setId(value)\n}\n\nconsole.log(picId)\nfunction addBot(id,name,image,phrase,health,armor,damage){\n let array = [...numbersArray]\n  array.push(id)\n  setArray(array)\n  if(numbersArray.find(item => item === id)){\n    console.log(\"match\")\n  }else{\n    let botArmy = document.querySelector(\"#yourBotArmy\")\n    let newBot = document.createElement(\"div\")\n    newBot.id = \"army-container\"\n    newBot.setAttribute(\"value\", id)\n    newBot.innerHTML = \n   `\n     <img src = ${image} id= 'army-pic'></img>\n     <h6 id=\"army-heading\">${name}</h6>\n     <h6 id=\"army-phrase\">${phrase}</h6>\n     <span id=\"army-abilities\" ><h5 id=\"army-ability\">health: ${health}</h5><h5 id=\"army-ability\">Armor: ${armor}</h5><h5 id=\"army-ability\">Damage: ${damage}</h5></span>\n    `\n    newBot.addEventListener('click',(e)=>{\n      console.log(array)\n      let value = parseInt(newBot.getAttribute('value'));\n      let newValue = numbersArray.filter((item)=>{\n        return item !== value\n      })\n      setArray(newValue)\n      newBot.remove()\n    })\n    botArmy.appendChild(newBot)\n  }\n}\n\n  return (\n    <Router>\n    <main>\n      <h1 className=\"H1\"> Bot Army Colle</h1>\n      <YourBotArmy sortByHealth = {sortByHealth}/>\n      <Switch>\n       <Route exact path=\"/\">\n         <BotCollection handleId = {handleId} addBot = {addBot} bots = {bots}/>\n       </Route>\n       <Route path=\"/bot\">\n        <OneBot addBot = {addBot} bots = {bots} picId = {picId}/>\n       </Route>\n        </Switch>\n    </main>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}